-----------------------------
-- Delete all data to restart (if needed)
-----------------------------
DELETE FROM gps_ponto;
DELETE FROM terreno;
DELETE FROM tipo_terreno;

DROP TABLE IF EXISTS gps_ponto;
DROP TABLE IF EXISTS terreno;
DROP TABLE IF EXISTS tipo_terreno;

DROP DATABASE IF EXISTS my_gis_gps;

----------------------------
-- Create database (from b04)
-----------------------------

-- CREATE DATABASE my_gis_gps; -- This command needs to be done on PSQL

-----------------------------
-- Paste the following code in the Query Tool
-----------------------------

CREATE EXTENSION postgis;


DELETE FROM gps_ponto;
DELETE FROM terreno;
DELETE FROM tipo_terreno;


DROP TABLE IF EXISTS terreno CASCADE;
DROP TABLE IF EXISTS tipo_terreno;
DROP TABLE IF EXISTS gps_ponto CASCADE;

CREATE TABLE tipo_terreno( 
    id_tipo_terreno VARCHAR PRIMARY KEY
);

CREATE TABLE terreno (
    id_terreno INTEGER PRIMARY KEY,
    id_tipo_terreno VARCHAR,
    CONSTRAINT fk1 FOREIGN KEY(id_tipo_terreno) REFERENCES tipo_terreno(id_tipo_terreno)
);

SELECT AddGeometryColumn('', 'terreno', 'g_terreno', -1, 'POLYGON', 2);

CREATE TABLE gps_ponto(
    id_ordem INTEGER,
    id_terreno INTEGER,
    CONSTRAINT pk_gps_ponto PRIMARY KEY(id_ordem, id_terreno),
    CONSTRAINT fk1 FOREIGN KEY(id_terreno) REFERENCES terreno(id_terreno)
); -- WITH OIDS;

SELECT AddGeometryColumn('', 'gps_ponto', 'g_ponto', -1, 'POINT', 2);



-- 6.c)
-- SELECT ST_AsText(ponto) FROM gps_ponto;

----------------------------
-- Povoar Dados
----------------------------
-- TIPO_TERRENO
----------------------------

INSERT INTO tipo_terreno( id_tipo_terreno )VALUES ('Lago');
INSERT INTO tipo_terreno( id_tipo_terreno )VALUES ('Floresta');
INSERT INTO tipo_terreno( id_tipo_terreno )VALUES ('Pantano');
INSERT INTO tipo_terreno( id_tipo_terreno )VALUES ('Savana');

----------------------------
-- TERRENO
----------------------------
INSERT INTO terreno (id_terreno, id_tipo_terreno) VALUES (1, 'Lago');
INSERT INTO terreno (id_terreno, id_tipo_terreno) VALUES (2, 'Lago');
INSERT INTO terreno (id_terreno, id_tipo_terreno) VALUES (3, 'Floresta');


----------------------------
-- GPS_PONTO
----------------------------
--================================================================================================
-- >> IMPORTANTE:
-- >> DESCOMEMNTAR A PROXIMA LINHA NA RESPOSTA A QUESTAO 3 DO GUIAO DA AULA PRATICA
-- >> (o QuantumGIS apenas regista o layer se ele tiver pelo menos 1 geometria)
--================================================================================================
INSERT INTO gps_ponto VALUES (1, 1,  ST_MakePoint( 0, 0 ) );


--================================================================================================
-- >> IMPORTANTE:
-- >> AS PROXIMAS LINHAS SAO PARA COMPLETAR NA RESPOSTA AS QUESTOES 5 E 6 DO GUIAO DA AULA PRATICA
--================================================================================================
-- 1. Os pontos foram editados no QuantumGis e depois gravados no PostGis
-- 2. Os INSERT foram gerado em:
-- pgAdmin III \ Tools \ Backup \ com a configuracao:
-- | File Options | Format: PLAIN"
-- | Dump Options #1 | Only Data; Use Insert Commands
-- INSERT INTO gps_ponto VALUES (1, 1, 

-- 5.d)



-- 1. Os pontos foram editados no QuantumGis e depois gravados no PostGis
-- 2. Os INSERT foram gerado em:
-- pgAdmin III \ Tools \ Query Tool \ com a interrogacao:
-- SELECT ST_AsText(g_ponto) FROM gps_ponto;
-- e depois executando essa interrogacao para um ficheiro (em Query \ Execute to file)
-- por fim substituindo no ficheiro gerado POINT por ST_MakePoint
-- INSERT INTO gps_ponto VALUES (1, 1,  ST_MakePoint(...);

--5.e)

-- Assuming the center is (-0.3, 0.3) and radius is 0.5
--DELETE FROM gps_ponto;

INSERT INTO gps_ponto VALUES (1, 1,  ST_MakePoint( 0, 0 ) );
--terreno_lago
INSERT INTO public.gps_ponto VALUES (2, 1, '0101000000CC83FED87822D53F00C055457BA5B1BF');
INSERT INTO public.gps_ponto VALUES (3, 1, '01010000006819D10754C7CE3F08D3DC057F15D7BF');
INSERT INTO public.gps_ponto VALUES (5, 1, '010100000040E5417F6C3CC1BFB0224C5610ADDEBF');
INSERT INTO public.gps_ponto VALUES (6, 1, '0101000000CEE0CCE9D31BD4BF185A9D09EF6AC8BF');
INSERT INTO public.gps_ponto VALUES (7, 1, '0101000000D81D469DECE7CBBF201D2456D69EC03F');
INSERT INTO public.gps_ponto VALUES (8, 1, '0101000000D02630C81D29B63FFCDBC630B056D13F');
INSERT INTO public.gps_ponto VALUES (10, 2, '010100000044681E11CF15DBBF2C5C8FC2F528E43F');
INSERT INTO public.gps_ponto VALUES (11, 2, '010100000028143A2BA55DD6BF5A921004E471DD3F');
INSERT INTO public.gps_ponto VALUES (12, 2, '0101000000E354062D4001E0BF5EEFDE143F6BDC3F');
INSERT INTO public.gps_ponto VALUES (13, 2, '01010000000963873420ACE2BF831FA7326801E23F');
INSERT INTO public.gps_ponto VALUES (30, 2, '0101000000E354062D4001E0BF82322EF36B71E73F');


----OLD-------
INSERT INTO gps_ponto (id_ordem, id_terreno, g_ponto)
VALUES
  (6, 1, ST_MakePoint(-0.3 + 0.5 * cos(radians(0)), 0.3 + 0.5 * sin(radians(0)))),
  (7, 1, ST_MakePoint(-0.3 + 0.5 * cos(radians(45)), 0.3 + 0.5 * sin(radians(45)))),
  (8, 1, ST_MakePoint(-0.3 + 0.5 * cos(radians(90)), 0.3 + 0.5 * sin(radians(90)))),
  (9, 1, ST_MakePoint(-0.3 + 0.5 * cos(radians(135)), 0.3 + 0.5 * sin(radians(135)))),
  (10, 1, ST_MakePoint(-0.3 + 0.5 * cos(radians(180)), 0.3 + 0.5 * sin(radians(180)))),
  (11, 1, ST_MakePoint(-0.3 + 0.5 * cos(radians(225)), 0.3 + 0.5 * sin(radians(225)))),
  (12, 1, ST_MakePoint(-0.3 + 0.5 * cos(radians(270)), 0.3 + 0.5 * sin(radians(270)))),
  (13, 2, ST_MakePoint(-0.3 + 0.5 * cos(radians(315)), 0.3 + 0.5 * sin(radians(315))));

-- Para cruzar
INSERT INTO gps_ponto (id_ordem, id_terreno, g_ponto)
VALUES
  (14, 1, ST_MakePoint(-0.3 + 0.7 * cos(radians(45)), 0.3 + 0.7 * sin(radians(45))));